//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.5

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "forms")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub form_id: Uuid,
    pub created_at: Option<DateTimeWithTimeZone>,
    pub updated_at: Option<DateTimeWithTimeZone>,
    pub info: Json,
    pub items: Json,
    pub access_control_roles: Vec<String>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::form_responses::Entity")]
    FormResponses,
}

impl Related<super::form_responses::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::FormResponses.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
